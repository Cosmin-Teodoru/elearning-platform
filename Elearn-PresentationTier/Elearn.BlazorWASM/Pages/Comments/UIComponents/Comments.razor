@using Elearn.HttpClients.Service
@using Elearn.Shared.Dtos
@using Elearn.Shared.Models
@inject ICommentService CommentService
@inject ILectureService LectureService

<div>Comments:</div>
@if (_commentsDto == null)
{
    <span>Comments Loading...</span>
}
@if (_commentsDto.Count == 0)
{
    <span> No comments </span>
}

@foreach (var comment in _commentsDto)
{
    <CommentBody Text="@comment.Text"></CommentBody>
}

@code {
    [Parameter]
    public string? Url { get; set; }
    private List<CommentUserDto?> _commentsDto = new();
    LectureDto? _lectureDto;

    protected override async Task OnInitializedAsync()
    {
        if (Url != null) _lectureDto = await LectureService.GetLectureByUrlAsync(Url);
        if (_lectureDto != null) _commentsDto = await CommentService.GetAllCommentsByLectureId(_lectureDto.Id);
    }

}