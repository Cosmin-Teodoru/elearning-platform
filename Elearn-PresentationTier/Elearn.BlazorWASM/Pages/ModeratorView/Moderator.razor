@page "/Moderator"
@using System.Security.Claims
@using Elearn.Shared.Dtos
@using Elearn.Shared.Models
@using Elearn.BlazorWASM.Pages.ModeratorView.UIComponents
@using Elearn.HttpClients.Service
@inject ILectureService _lectureService
<h3 class="text-center">Moderator</h3>
<hr/>
<h3 class="text-center">Delete Lectures</h3>
                         <MudGrid Class="my-6" Justify="Justify.Center">
                             @* @foreach (var lectures in _lectureToShow) *@
                             @* { *@
                             @*     <MudItem xs="12" sm="9" md="7"> *@
                             @*         <LectureTable Lectures="@lectures"></LectureTable> *@
                             @*     </MudItem> *@
                             @*      *@
                             @* } *@
                             <MudItem xs="12" sm="9" md="7">
                                 <LectureTable></LectureTable>
                             </MudItem>
                         </MudGrid>
<hr/>
<h3 class="text-center">Aprove Teacher</h3>
<MudGrid Class="my-6" Justify="Justify.Center">
     <MudItem xs="12" sm="9" md="7">
                                 <ApproveTeacherTable></ApproveTeacherTable>
                             </MudItem>
                         </MudGrid>
<hr/>
<h3 class="text-center">Delete Users</h3>
 <MudGrid Class="my-6" Justify="Justify.Center">
     <MudItem xs="12" sm="9" md="7">
                                 <UserTable></UserTable>
                             </MudItem>
                         </MudGrid>
@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private IEnumerable<Claim>? userClaims;
    private string? username;
    private bool isLoggedIn;
    //private List<LectureDto?> _lectureToShow = new List<LectureDto?>();
    private List<UserDto?> _userToShow = new List<UserDto?>();
    private bool _hidePosition;
    private bool _loading;
    public UserDto? CurrentUser;
    public UpdateUserDto Dto = new();
    // private async Task GetLectures()
    // {
    //
    //     
    //         _lectureToShow = await _lectureService.GetLecturesAsync();
    //     
    //
    // }
}