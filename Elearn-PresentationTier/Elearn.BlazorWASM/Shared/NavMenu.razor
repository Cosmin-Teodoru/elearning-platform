@using System.Security.Claims
@using Elearn.HttpClients.Service
@using Elearn.Shared.Models
@inject NavigationManager navMgr
@inject IUserService _UserService

<MudToolBar>
    <AuthorizeView>
        <Authorized>
            <MudIconButton Icon="@Icons.Material.Outlined.Home" Color="Color.Inherit" OnClick="GoHome"/>
            <MudButton Variant="Variant.Text" OnClick="GoToHome">Home</MudButton>
            
            @if(CurrentUser?.SecurityLevel == 4)
            {
            <MudIconButton Icon="@Icons.Material.Outlined.Add" OnClick="GoToAddALecture"/>
            <MudButton Variant="Variant.Text" OnClick="GoToAddALecture">Add lecture</MudButton>
            }
            
            @if(CurrentUser?.SecurityLevel == 2)
            {
              <MudIconButton Icon="@Icons.Material.Outlined.Add" OnClick="GoToAddAQuestion"/>
            <MudButton Variant="Variant.Text" OnClick="GoToAddAQuestion">Add question</MudButton>
            }
            
            
            <MudButton Variant="Variant.Text" OnClick="GoToUniversities">Universities</MudButton>
            <MudSpacer/>
            <MudIconButton Icon="@Icons.Material.Outlined.PeopleAlt" OnClick="GoToProfile"/>
            <MudButton Variant="Variant.Text" OnClick="GoToProfile">Profile </MudButton>
            <MudIconButton Icon="@Icons.Material.Outlined.Book" OnClick="GoToAccountSettings"/>
            <MudButton Variant="Variant.Text" OnClick="GoToAccountSettings">Account Settings </MudButton>
            <MudIconButton Icon="@Icons.Material.Outlined.Logout" OnClick="GoToLogout"/>
        </Authorized>
        <NotAuthorized>
            <MudIconButton Icon="@Icons.Material.Outlined.Home" Color="Color.Inherit" OnClick="GoHome"/>
                     <MudButton Variant="Variant.Text" OnClick="GoToHome">Home</MudButton>
            <MudSpacer/>
            <MudIconButton Icon="@Icons.Material.Outlined.Login" OnClick="GoToLogin"/>
            <MudButton Variant="Variant.Text" OnClick="GoToLogin">Login </MudButton>
            <MudIconButton Icon="@Icons.Material.Outlined.Book" OnClick="GoToRegister"/>
            <MudButton Variant="Variant.Text" OnClick="GoToRegister">Register </MudButton>
        </NotAuthorized>
    </AuthorizeView>


</MudToolBar>

@code {
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    private IEnumerable<Claim>? userClaims;
    private string? username;
    private bool isLoggedIn;
    private UserDto? CurrentUser;

    private void GoToAddALecture()
    {
        navMgr.NavigateTo("/Create-lecture");
    }

    private void GoToLogin()
    {
        navMgr.NavigateTo("/Login");
    }

    private void GoToRegister()
    {
        navMgr.NavigateTo("/Register");
    }

    private void GoHome()
    {
        navMgr.NavigateTo("/");
    }

    private void GoToProfile()
    {
        navMgr.NavigateTo("/Profile");
    }

    private void GoToAccountSettings()
    {
        navMgr.NavigateTo("/ManageAccount");
    }

    private void GoToUniversities()
    {
        navMgr.NavigateTo("/Universities");
    }

    private void GoToLogout()
    {
        navMgr.NavigateTo("/Logout");
        
    }
    
    private void GoToHome()
        {
            navMgr.NavigateTo("/");
        }

    private void GoToAddAQuestion()
    {
        navMgr.NavigateTo("/Create-question");
    }

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;
        if (!isLoggedIn) return;
        userClaims = user.Claims;
        username = user.Identity!.Name;
        CurrentUser = await _UserService.GetUserByUsernameAsync(username);
        
    }
}